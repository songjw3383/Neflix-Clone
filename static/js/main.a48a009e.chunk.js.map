{"version":3,"sources":["axios.js","MovieDetail.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","get","MovieDetail","backdrop_path","title","overview","name","release_date","first_air_date","vote_average","setMovieVisibility","className","Math","floor","random","src","alt","onClick","fontSize","Row","fetchUrl","isLargeRow","useState","movies","setMovies","movieVisibility","movieSelected","setMovieSelection","useEffect","a","request","data","results","fetchData","map","movie","handleClick","poster_path","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a48a009e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//base url\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\ninstance.get('/')\r\n\r\nexport default instance;","import React from 'react'\r\nimport './MovieDetail.css'\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport ThumbsUpDownIcon from '@mui/icons-material/ThumbsUpDown';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction MovieDetail({backdrop_path,title,overview,name,release_date,first_air_date,vote_average,setMovieVisibility}) {\r\n    // console.log({setMovieVisibility})\r\n    const randomPercentage = ()=>{\r\n        return Math.floor(Math.random()*100);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n                <div className=\"content__info\">\r\n                    <h1 className=\"title\">{title ? title : name}</h1>\r\n                        <div className=\"content__info__secondLine\">\r\n                            <h4 className=\"release_date\">{release_date ? release_date : first_air_date}</h4>\r\n                            <h4 className=\"vote_average\"><ThumbsUpDownIcon />{vote_average}</h4>\r\n                            <h4 className=\"random_percent\">{randomPercentage()}% for you</h4>\r\n                        </div>\r\n                    <h5>{overview}</h5>\r\n                        <div className=\"content__info__buttons\">\r\n                            <button><PlayArrowIcon />Play</button>\r\n                            <button>+ My LIST</button>\r\n                        </div>\r\n                </div>\r\n                \r\n                <div className=\"content__img\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${backdrop_path}`} alt=\"\"/>\r\n                    <span onClick={()=>setMovieVisibility(false)} className=\"close\"><CloseIcon fontSize=\"large\"/></span>\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","import React, { useEffect, useState } from 'react'\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport movieTrailer from 'movie-trailer'\r\nimport MovieDetail from './MovieDetail';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [movieVisibility, setMovieVisibility] = useState(false);\r\n    const [movieSelected, setMovieSelection] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            // console.log(request.data.results);\r\n            setMovies(request.data.results)\r\n            return request\r\n        }\r\n        fetchData();\r\n    },[fetchUrl])\r\n\r\n    // console.log(movies)\r\n    const handleClick = (movie) => {\r\n        setMovieVisibility(true);\r\n        setMovieSelection(movie);  \r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* title */}\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img\r\n                    key={movie.id}\r\n                    onClick={() => handleClick(movie)}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {movieVisibility && <MovieDetail {...movieSelected} setMovieVisibility={setMovieVisibility} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"847100f04115784e1abb1bb2139c9485\";\r\n\r\n//EndPoints of API Request\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=ko_kR`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=ko-KR`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css'\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]\r\n            );\r\n            return request\r\n        }\r\n        fetchData()\r\n    },[])\r\n\r\n\r\n    // set maximum lengths of description \r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n                backgroundPosition: \"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                \r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">\r\n                    {truncate(movie?.overview, 200)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    },[])\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n            alt=\"Netflix Logo\"\r\n            />\r\n            <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n            alt=\"Netflix Logo\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Navbar */}\n      <Nav />\n      {/* Banner */}\n      <Banner />\n      {/* Row Component */}\n      <Row title=\"NETFLIX ORIGINAL\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}